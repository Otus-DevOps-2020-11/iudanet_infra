image: ruby:2.4.2

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'
  DOCKER_IMAGE: iudanet/otus-rabbit-ci

.before_script: &before_script
  before_script:
    - cd reddit
    - bundle install

build_job:

  stage: build
  image: docker:19.03.0
  # services:
  #   - docker:19.03.0-dind
  variables:
      DOCKER_TLS_CERTDIR: ""
      # DOCKER_HOST: tcp://docker:2375/
      DOCKER_DRIVER: overlay2
  before_script:
      - docker info
      - docker login -u ${docker_hub_login} -p ${docker_hub_password}
  script:
      - docker build  -t ${DOCKER_IMAGE}:${CI_COMMIT_REF_NAME} -t ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA} ./reddit/.
      - if [[ "${CI_COMMIT_REF_NAME}" == "${CI_COMMIT_TAG}" ]]; then docker tag ${DOCKER_IMAGE}:${CI_COMMIT_REF_NAME} ${DOCKER_IMAGE}:latest && docker push ${DOCKER_IMAGE}:latest ; fi
      - docker push ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}
      - docker push ${DOCKER_IMAGE}:${CI_COMMIT_REF_NAME}

test_unit_job:
  <<: *before_script
  stage: test
  services:
    - mongo:latest
  script:
    - echo 'Testing 1'
    - ruby simpletest.rb

test_integration_job:
  <<: *before_script
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  image: docker:19.03.0
  script:
    - echo 'Deploy'
    - docker stop $(docker ps -q -a --filter "name=dev.*") || true
    - docker run
      -d
      --name dev.${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}
      --rm
      --network=proxy
      --label "traefik.docker.network=proxy"
      --label "traefik.enable=true"
      --label "traefik.http.routers.$CI_ENVIRONMENT_SLUG.rule=Host(\`$CI_ENVIRONMENT_SLUG.review.otus.iudanet.com\`)"
      ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  environment:
    name: dev
    url: http://dev.review.otus.iudanet.com:81

branch review:
  stage: review
  image: docker:19.03.0
  script:
    - echo "Deploy to $CI_ENVIRONMENT_SLUG"
    - docker stop $(docker ps -q -a --filter "name=review.${CI_ENVIRONMENT_SLUG}") || true
    - docker run
      -d
      --name review.${CI_ENVIRONMENT_SLUG}
      --rm
      --network=proxy
      --label "traefik.docker.network=proxy"
      --label "traefik.enable=true"
      --label "traefik.http.routers.$CI_ENVIRONMENT_SLUG.rule=Host(\`$CI_ENVIRONMENT_SLUG.review.otus.iudanet.com\`)"
      ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.review.otus.iudanet.com:81
  only:
    - branches
  except:
    - master

staging:
  stage: stage
  image: docker:19.03.0
  when: manual
  script:
    - echo 'Deploy'
    - docker stop $(docker ps -q -a --filter "name=beta.*") || true
    - docker run
      -d
      --name beta.${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}
      --rm
      --network=proxy
      --label "traefik.docker.network=proxy"
      --label "traefik.enable=true"
      --label "traefik.http.routers.$CI_ENVIRONMENT_SLUG.rule=Host(\`$CI_ENVIRONMENT_SLUG.review.otus.iudanet.com\`)"
      ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  environment:
    name: beta
    url: http://beta.review.otus.iudanet.com:81
  only:
    - /^\d+\.\d+\.\d+/

production:
  stage: production
  image: docker:19.03.0
  when: manual
  script:
    - echo 'Deploy'
    - docker stop $(docker ps -q -a --filter "name=production.*") || true
    - docker run
      -d
      --name production.${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}
      --rm
      --network=proxy
      --label "traefik.docker.network=proxy"
      --label "traefik.enable=true"
      --label "traefik.http.routers.$CI_ENVIRONMENT_SLUG.rule=Host(\`$CI_ENVIRONMENT_SLUG.review.otus.iudanet.com\`)"
      ${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  environment:
    name: production
    url: http://production.review.otus.iudanet.com:81
  only:
    - /^\d+\.\d+\.\d+/
